//Приложение, которое будет разных пользователей приветствовать по-разному, а именно: 
//выделим для себя условного любимчика, и наше приложение будет реагировать на него по-особенному. 
//Для чего это нужно? 
//В классическом академическом примере это необходимо для знакомства с синтаксисом. 
//А в остальном — смело можно сказать, что 99,9% всех приложений, 
//которые вы будете создавать, будут использовать этот оператор и похожие конструкции. 

// конструкция ветвления
// Приложение будет выглядеть следующим образом: 
// ● Начало 
// ● Имя пользователя (вводим) 
// ● ЕСЛИ имя пользователя совпадает с «Маша», то будем приветствовать его по-особенному.  
// ● ИНАЧЕ — поприветствовать по-обычному (если, например, имя пользователя — Серёжа или Миша, 
// программа просто напишет «Привет» и соответствующее имя) 
// ● Конец приложения  

Console.Write("Введите имя пользователя: "); // Сразу просим ввести имя пользователя, 
// чтобы наш пользователь понимал, что конкретно от него хотят, 
// и, чтобы было понятно, что наше приложение запустилось. 
string username = Console.ReadLine(); // «строки» — string
// Здесь будет наименование переменной username, 
// считываем данные мы при помощи Console.ReadLine. 
if(username.ToLower() == "masha") // Дальше мы хотим сделать проверку. 
// Если наш username равен — «Маша». 
// Дальше ставим фигурные скобки. 
// Внутри скобок мы пишем Сonsole.WriteLine и какой-то текст специально для Маши. 
{
Console.WriteLine("Ура, это же Маша!");
}

else
{
Console.Write("Привет, ");
Console.WriteLine(username); 
}

// Проблемы и ограничения в работе приложения 
// Если «Маша» написать «маша» с маленькой буквы, 
// теперь username не совпадает с именем «Маша», 
// написанным с большой буквы, 
// а значит, таких «Маш» можно придумать очень и очень много 
// (варианты: «МАша», «МАШа» и т. д.). 
// Можно ли описать все эти ситуации? 
// Технически да, можно. 
// Для этого нужно использовать сложные условия, 
// в этой части курса мы не будем их затрагивать.  
// Каким же образом тогда решать эту проблему? 
// Сделать это можно очень просто. 

// Мы поставим точку после «username» и вызовем операцию ТoLower(). 
// Она позволяет перевести все символы в вашей строке в нижний регистр.  

// Console.Write (“Введите имя пользователя: ”); 
// string username = Console.ReadLine (); 
// if(username.ToLower() == “Маша”) 
// { 
// Сonsole.WriteLine(Ура, это же МАША); 
// } 
// else 
// { 
// Сonsole.Write("Привет, ");  
// Сonsole.WriteLine(username); 
// } 

// теперь для нас референтным значением будет являться «маша» с маленькой буквы. 
// Таким образом, мы решили большую часть проблем. 
// Для начала запустим «Маша» с большой буквы. 
// Далее введём «МAшу» для демонстрации того, что ничего не поломалось. 
// Введём «Том», например, и получим «Привет, Том». 
