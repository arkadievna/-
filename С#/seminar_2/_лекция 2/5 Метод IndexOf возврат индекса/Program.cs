void FillArray(int[] collection) 
{ 
    int length = collection.Length;
    int index = 0; 
    while (index < length) 
    {          
        collection[index] = new Random().Next(1, 10);     
        index++; 
    } 
} 

void PrintArray(int[] col)
{
  int count = col.Length; 
  int position = 0;
    while (position < count)
    {
      Console.WriteLine(col[position]); 
      position++; 
    }
}

//        Метод IndexOf 
//Мы попробовали написать свои первые методы: метод заполнения массива и метод его печати на экран. 
//Теперь попробуем адаптировать решение предыдущей задачи,
//в которой находили нужные элементы и позицию нужного элемента в массиве. 
//Для этого потребуется описать метод, отличный от void. Он будет возвращать позицию,
//то есть index. Назовём этот метод IndexOf,
//а в качестве аргумента будет приходить массив collection и какой-то элемент find. 
int IndexOf(int[] collection, int find) 
{ 
    int count = collection.Length; //определяем количество элементов
        int index = 0; //Нам потребуются индексы, чтобы щёлкать массив, пусть это будет переменная index
        //пусть будет 0
        int position = 0; //В position положим значение нашего индекса. После того как этот цикл отработает,
        while (index < count) //возьмём цикл while, который будет проверять index < count 
        {
            if(collection[index] == find) //если collection[index] совпал с find, потребуется куда-то
            //сохранить позицию. Чтобы её куда-то сохранить, определим новую переменную position.
            {
                position = index;
                break; //с этим оператором выводиться будет только первый индекс, 
                //даже если четвёрок в массиве будет несколько. 
                //без этого оператора, если в массиве несколько четвёрок, выводится индекс
                //последней найденной четвёрки
            }
            index++;
        }
        return position; 
 } 

int[] array = new int[10]; 

FillArray(array); 
array [4] = 4; //принудительно добавляем четвёрку в четвёртый индекс
array [6] = 4; //так же принудительно добавляем 4 в шестой индекс
PrintArray(array); 

//Теперь протестируем. 
//Введём 
Console.WriteLine();
//Определим переменную pos и положим в неё результат работы метода IndexOf. 
//В качестве аргумента будет передаваться наш массив. 
//Например, будем искать число 4. 
int pos = IndexOf(array, 4); //array 4 означает, что мы ищем в массиве позицию числа 4, 
//если четвёрки в массиве не будет, то выйдет 0. !!НО !! 0 - это же тоже индекс
Console.WriteLine(pos);

