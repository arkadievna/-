//Для начала определим и опишем 9 переменных. 

int a1 = 15;
int b1 = 21;
int c1 = 39;
int a2 = 12;
int b2 = 23;
int c2 = 33;
int a3 = 13;
int b3 = 23;
int c3 = 33;

//Далее определим переменную максимум, куда положено значение первого аргумента. 

int max = a1;

//На следующем этапе проверим: 
//если значение новой переменной, 
//то есть b1, больше max, 
//то в max положим b1: 

if (b1 > max) max = b1; 

//Технически это надо повторить много раз: 

if (c1 > max) max = c1; 

//Далее воспользуемся копипастом и допишем следующее: 

if (a2 > max) max = a2; 
if (b2 > max) max = b2; 
if (c2 > max) max = c2; 

//Главное — избавиться от всех потенциальных ошибок, которые могут быть допущены. 
//Поэтому везде вместо 1 поставим 2. 
//Таким же образом находим максимум из тройки игроков: 

if (a3 > max) max = a3; 
if (b3 > max) max = b3; 
if (c3 > max) max = c3; 

//Далее аккуратно отформатируем код и выведем на экран:

Console.WriteLine(max); 

//Таким образом выглядит решение, если использовать классический стихийный подход. 

//Смотрим на вводные данные, находим значение 39 и снова проверяем написание переменных. 
//Далее переходим к терминалу и вводим команду dotnet run, чтобы получить 39. 
//Мы видим, что происходит сборка проекта, и на экране появляется 39. 
//Введём для теста какое-нибудь новое максимальное число. Пусть это будет 313. 
//Проверяем и убеждаемся, что всё верно. 
//Ещё раз меняем какое-нибудь значение — снова всё работает хорошо. 
//То есть наш алгоритм реализован правильно. 